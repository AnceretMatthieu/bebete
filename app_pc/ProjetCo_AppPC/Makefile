#############################################################################
# Makefile for building: ProjetCo_AppPC
# Generated by qmake (2.01a) (Qt 4.8.1) on: Sun May 20 18:58:21 2012
# Project:  ProjetCo_AppPC.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -spec /usr/share/qt4/mkspecs/linux-g++-64 CONFIG+=debug -o Makefile ProjetCo_AppPC.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_PHONON_LIB -DQT_XML_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtXml -I/usr/include/phonon -I/usr/include/qt4 -I/usr/include/qt4/phonon_compat -I. -I.
LINK          = g++
LFLAGS        = -m64
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -lphonon -lQtXml -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		mainwindow.cpp \
		aboutwindow.cpp \
		modifquestionwindow.cpp \
		ReponseBDD.cpp \
		Reponse.cpp \
		QuestionBDD.cpp \
		Question.cpp \
		MediaBDD.cpp \
		Media.cpp \
		ListeReponse.cpp \
		ListeQuestion.cpp \
		ListeMedia.cpp \
		Legende.cpp \
		EspeceBDD.cpp \
		Espece.cpp \
		categoriebdd.cpp \
		Categorie.cpp \
		BDD.cpp moc_mainwindow.cpp \
		moc_aboutwindow.cpp \
		moc_modifquestionwindow.cpp
OBJECTS       = main.o \
		mainwindow.o \
		aboutwindow.o \
		modifquestionwindow.o \
		ReponseBDD.o \
		Reponse.o \
		QuestionBDD.o \
		Question.o \
		MediaBDD.o \
		Media.o \
		ListeReponse.o \
		ListeQuestion.o \
		ListeMedia.o \
		Legende.o \
		EspeceBDD.o \
		Espece.o \
		categoriebdd.o \
		Categorie.o \
		BDD.o \
		moc_mainwindow.o \
		moc_aboutwindow.o \
		moc_modifquestionwindow.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		ProjetCo_AppPC.pro
QMAKE_TARGET  = ProjetCo_AppPC
DESTDIR       = 
TARGET        = ProjetCo_AppPC

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_mainwindow.h ui_aboutwindow.h ui_modifquestionwindow.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)
	{ test -n "$(DESTDIR)" && DESTDIR="$(DESTDIR)" || DESTDIR=.; } && test $$(gdb --version | sed -e 's,[^0-9]\+\([0-9]\)\.\([0-9]\).*,\1\2,;q') -gt 72 && gdb --nx --batch --quiet -ex 'set confirm off' -ex "save gdb-index $$DESTDIR" -ex quit '$(TARGET)' && test -f $(TARGET).gdb-index && objcopy --add-section '.gdb_index=$(TARGET).gdb-index' --set-section-flags '.gdb_index=readonly' '$(TARGET)' '$(TARGET)' && rm -f $(TARGET).gdb-index || true

Makefile: ProjetCo_AppPC.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/x86_64-linux-gnu/libQtXml.prl \
		/usr/lib/x86_64-linux-gnu/libQtGui.prl \
		/usr/lib/x86_64-linux-gnu/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++-64 CONFIG+=debug -o Makefile ProjetCo_AppPC.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_phonon.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/x86_64-linux-gnu/libQtXml.prl:
/usr/lib/x86_64-linux-gnu/libQtGui.prl:
/usr/lib/x86_64-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++-64 CONFIG+=debug -o Makefile ProjetCo_AppPC.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/ProjetCo_AppPC1.0.0 || $(MKDIR) .tmp/ProjetCo_AppPC1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/ProjetCo_AppPC1.0.0/ && $(COPY_FILE) --parents mainwindow.h aboutwindow.h modifquestionwindow.h ReponseBDD.h Reponse.h QuestionBDD.h Question.h MediaBDD.h Media.h ListeReponse.h ListeQuestion.h ListeMedia.h Legende.h EspeceBDD.h Espece.h categoriebdd.h Categorie.h BDD.h .tmp/ProjetCo_AppPC1.0.0/ && $(COPY_FILE) --parents main.cpp mainwindow.cpp aboutwindow.cpp modifquestionwindow.cpp ReponseBDD.cpp Reponse.cpp QuestionBDD.cpp Question.cpp MediaBDD.cpp Media.cpp ListeReponse.cpp ListeQuestion.cpp ListeMedia.cpp Legende.cpp EspeceBDD.cpp Espece.cpp categoriebdd.cpp Categorie.cpp BDD.cpp .tmp/ProjetCo_AppPC1.0.0/ && $(COPY_FILE) --parents mainwindow.ui aboutwindow.ui modifquestionwindow.ui .tmp/ProjetCo_AppPC1.0.0/ && (cd `dirname .tmp/ProjetCo_AppPC1.0.0` && $(TAR) ProjetCo_AppPC1.0.0.tar ProjetCo_AppPC1.0.0 && $(COMPRESS) ProjetCo_AppPC1.0.0.tar) && $(MOVE) `dirname .tmp/ProjetCo_AppPC1.0.0`/ProjetCo_AppPC1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/ProjetCo_AppPC1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mainwindow.cpp moc_aboutwindow.cpp moc_modifquestionwindow.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mainwindow.cpp moc_aboutwindow.cpp moc_modifquestionwindow.cpp
moc_mainwindow.cpp: aboutwindow.h \
		modifquestionwindow.h \
		categoriebdd.h \
		Question.h \
		QuestionBDD.h \
		BDD.h \
		ListeQuestion.h \
		ListeReponse.h \
		Reponse.h \
		Categorie.h \
		ReponseBDD.h \
		Media.h \
		MediaBDD.h \
		mainwindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

moc_aboutwindow.cpp: aboutwindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) aboutwindow.h -o moc_aboutwindow.cpp

moc_modifquestionwindow.cpp: modifquestionwindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) modifquestionwindow.h -o moc_modifquestionwindow.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_mainwindow.h ui_aboutwindow.h ui_modifquestionwindow.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mainwindow.h ui_aboutwindow.h ui_modifquestionwindow.h
ui_mainwindow.h: mainwindow.ui
	/usr/bin/uic-qt4 mainwindow.ui -o ui_mainwindow.h

ui_aboutwindow.h: aboutwindow.ui
	/usr/bin/uic-qt4 aboutwindow.ui -o ui_aboutwindow.h

ui_modifquestionwindow.h: modifquestionwindow.ui
	/usr/bin/uic-qt4 modifquestionwindow.ui -o ui_modifquestionwindow.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

main.o: main.cpp mainwindow.h \
		aboutwindow.h \
		modifquestionwindow.h \
		categoriebdd.h \
		Question.h \
		QuestionBDD.h \
		BDD.h \
		ListeQuestion.h \
		ListeReponse.h \
		Reponse.h \
		Categorie.h \
		ReponseBDD.h \
		Media.h \
		MediaBDD.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainwindow.o: mainwindow.cpp mainwindow.h \
		aboutwindow.h \
		modifquestionwindow.h \
		categoriebdd.h \
		Question.h \
		QuestionBDD.h \
		BDD.h \
		ListeQuestion.h \
		ListeReponse.h \
		Reponse.h \
		Categorie.h \
		ReponseBDD.h \
		Media.h \
		MediaBDD.h \
		ui_mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cpp

aboutwindow.o: aboutwindow.cpp aboutwindow.h \
		ui_aboutwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o aboutwindow.o aboutwindow.cpp

modifquestionwindow.o: modifquestionwindow.cpp modifquestionwindow.h \
		ui_modifquestionwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o modifquestionwindow.o modifquestionwindow.cpp

ReponseBDD.o: ReponseBDD.cpp ReponseBDD.h \
		BDD.h \
		Reponse.h \
		Categorie.h \
		ListeQuestion.h \
		ListeReponse.h \
		Question.h \
		Media.h \
		Espece.h \
		ListeMedia.h \
		categoriebdd.h \
		QuestionBDD.h \
		MediaBDD.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ReponseBDD.o ReponseBDD.cpp

Reponse.o: Reponse.cpp Reponse.h \
		Categorie.h \
		ListeQuestion.h \
		ListeMedia.h \
		Media.h \
		Question.h \
		Espece.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Reponse.o Reponse.cpp

QuestionBDD.o: QuestionBDD.cpp QuestionBDD.h \
		BDD.h \
		ListeQuestion.h \
		ListeReponse.h \
		Reponse.h \
		Categorie.h \
		Question.h \
		ReponseBDD.h \
		Media.h \
		MediaBDD.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o QuestionBDD.o QuestionBDD.cpp

Question.o: Question.cpp ListeMedia.h \
		ListeReponse.h \
		Reponse.h \
		Categorie.h \
		ListeQuestion.h \
		Media.h \
		Question.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Question.o Question.cpp

MediaBDD.o: MediaBDD.cpp MediaBDD.h \
		BDD.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o MediaBDD.o MediaBDD.cpp

Media.o: Media.cpp Reponse.h \
		Categorie.h \
		ListeQuestion.h \
		Question.h \
		Media.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Media.o Media.cpp

ListeReponse.o: ListeReponse.cpp Reponse.h \
		Categorie.h \
		ListeQuestion.h \
		ListeReponse.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ListeReponse.o ListeReponse.cpp

ListeQuestion.o: ListeQuestion.cpp ListeQuestion.h \
		Question.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ListeQuestion.o ListeQuestion.cpp

ListeMedia.o: ListeMedia.cpp ListeMedia.h \
		Media.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ListeMedia.o ListeMedia.cpp

Legende.o: Legende.cpp Legende.h \
		Media.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Legende.o Legende.cpp

EspeceBDD.o: EspeceBDD.cpp EspeceBDD.h \
		BDD.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o EspeceBDD.o EspeceBDD.cpp

Espece.o: Espece.cpp Reponse.h \
		Categorie.h \
		ListeQuestion.h \
		Espece.h \
		ListeMedia.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Espece.o Espece.cpp

categoriebdd.o: categoriebdd.cpp categoriebdd.h \
		Question.h \
		QuestionBDD.h \
		BDD.h \
		ListeQuestion.h \
		ListeReponse.h \
		Reponse.h \
		Categorie.h \
		ReponseBDD.h \
		Media.h \
		MediaBDD.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o categoriebdd.o categoriebdd.cpp

Categorie.o: Categorie.cpp Question.h \
		Categorie.h \
		ListeQuestion.h \
		Reponse.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Categorie.o Categorie.cpp

BDD.o: BDD.cpp BDD.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o BDD.o BDD.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_aboutwindow.o: moc_aboutwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_aboutwindow.o moc_aboutwindow.cpp

moc_modifquestionwindow.o: moc_modifquestionwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_modifquestionwindow.o moc_modifquestionwindow.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

